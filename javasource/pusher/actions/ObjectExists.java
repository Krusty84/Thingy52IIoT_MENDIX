// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package pusher.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaObject;
import com.mendix.webui.CustomJavaAction;

/**
 * Checks if an objec existe based on the module.entity and guid
 * 
 * When entity access is applied to the microflow that is running this action on a object without access, this action will not return false.
 */
public class ObjectExists extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String ModuleEntity;
	private java.lang.String ObjectGuid;

	public ObjectExists(IContext context, java.lang.String ModuleEntity, java.lang.String ObjectGuid)
	{
		super(context);
		this.ModuleEntity = ModuleEntity;
		this.ObjectGuid = ObjectGuid;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		if (this.ObjectGuid == null || this.ObjectGuid.isEmpty()) {
			throw new Exception("ObjectGuid parameter should not be empty");
		}
		if (!this.ObjectGuid.matches("[0-9]+")) {
			throw new Exception("ObjectGuid parameter should be numbers");
		}
		if (this.ModuleEntity == null || this.ModuleEntity.isEmpty()) {
			throw new Exception("ModuleEntity parameter should not be empty");
		}
		if (!this.ModuleEntity.contains(".")) {
			throw new Exception("ModuleEntity parameter have a module and entity <module>.<entity>");
		}
		IMetaObject meta = Core.getMetaObject(ModuleEntity);
		if (meta == null) {
			throw new Exception("ModuleEntity parameter is not a existing entity in the domain model");
		}
		
		String XPath = "//" + ModuleEntity + "[id=" + ObjectGuid + "]";
		List<IMendixObject> list = Core.retrieveXPathQuery(this.getContext(), XPath);

		if (list.size() > 0) {
			return true;
		}

		return false;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ObjectExists";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
